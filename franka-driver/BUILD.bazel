# -*- python -*-

load("//tools/lint:lint.bzl", "add_lint_tests")

package(default_visibility = ["//visibility:public"])

cc_binary(
    name = "franka_driver_v5",
    srcs = [
        "franka_driver.cc",
    ],
    deps = [
        "@drake//common:common",
        "@drake//lcmtypes:panda",
        "@drake//multibody/plant",
        "@drake//multibody/parsing:parsing",
        "@gflags",
        "@lcm",
        "@libfranka_v5",
    ],
    data = [
        "//models:franka_control_models",
        "@drake//manipulation/models/franka_description:models",
    ],
)

cc_binary(
    name = "franka_driver_v4",
    srcs = [
        "franka_driver.cc",
    ],
    deps = [
        "@drake//common:common",
        "@drake//lcmtypes:panda",
        "@drake//multibody/plant",
        "@drake//multibody/parsing:parsing",
        "@gflags",
        "@lcm",
        "@libfranka_v4",
    ],
    data = [
        "//models:franka_control_models",
        "@drake//manipulation/models/franka_description:models",
    ],
)

cc_binary(
    name = "franka_hand_driver_v5",
    srcs = [
        "franka_hand_driver.cc",
    ],
    deps = [
        "@drake//common:common",
        "@drake//lcmtypes:panda",
        "@drake//lcmtypes:schunk",
        "@gflags",
        "@lcm",
        "@libfranka_v5",
    ],
    data = [
        "//models:franka_control_models",
        "@drake//manipulation/models/franka_description:models",
    ],
)

cc_binary(
    name = "franka_hand_driver_v4",
    srcs = [
        "franka_hand_driver.cc",
    ],
    deps = [
        "@drake//common:common",
        "@drake//lcmtypes:panda",
        "@drake//lcmtypes:schunk",
        "@gflags",
        "@lcm",
        "@libfranka_v4",
    ],
    data = [
        "//models:franka_control_models",
        "@drake//manipulation/models/franka_description:models",
    ],
)

cc_binary(
    name = "panda_status_subscriber",
    srcs = [
        "panda_status_subscriber.cc",
    ],
    deps = [
        "@drake//lcmtypes:panda",
        "@lcm",
    ],
)
cc_binary(
    name = "panda_status_drake_subscriber_main",
    srcs = ["panda_status_drake_subscriber_main.cc"],
    deps = [
        ":shared_memory_lib",
        ":panda_status_drake_subscriber",
        "@drake//systems/lcm:lcm_subscriber_system",
        "@drake//systems/lcm:lcm_interface_system",
        "@drake//systems/analysis:simulator",
        "@drake//systems/framework:diagram_builder",
        "@drake//systems/framework:leaf_system",
        "@drake//systems/framework:framework",
        "@drake//systems/framework:context",
        "@drake//systems/primitives:vector_log_sink",
        "@drake//multibody/parsing:parser",
        "@drake//multibody/plant:plant",
        "@drake//multibody/tree:tree",
        "@drake//lcmtypes:panda",
        "@drake//lcm:drake_lcm",
        "@drake//lcm:lcm",
    ],
)

cc_library(
    name = "panda_status_drake_subscriber",
    srcs = ["panda_status_drake_subscriber.cc"],
    hdrs = ["panda_status_drake_subscriber.h"],
    deps = [
        "@drake//systems/framework:leaf_system",
        "@drake//systems/framework:framework",
        "@drake//systems/framework:context",
        "@drake//lcmtypes:panda",
    ],
)
cc_library(
    name = "shared_memory_lib",
    hdrs = ["shared_memory.hpp"],
    includes = ["."],  # optional if header is in the same dir
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "shared_mem_panda",
    srcs = ["shared_mem_panda.cpp"],
    deps = [
        ":shared_memory_lib",
        ":panda_status_drake_subscriber",  # If it uses PandaStatusReceiver
        "@drake//systems/lcm:lcm_subscriber_system",
        "@drake//systems/lcm:lcm_interface_system",
        "@drake//systems/analysis:simulator",
        "@drake//systems/framework:diagram_builder",
        "@drake//systems/framework:leaf_system",
        "@drake//systems/framework:framework",
        "@drake//systems/framework:context",
        "@drake//systems/primitives:vector_log_sink",
        "@drake//multibody/parsing:parser",
        "@drake//multibody/plant:plant",
        "@drake//multibody/tree:tree",
        "@drake//lcmtypes:panda",
        "@drake//lcm:drake_lcm",
        "@drake//lcm:lcm",

    ],
)


add_lint_tests()